{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAHY,UAKAA,EAAKC,KAAI,SAAAC,GAAM,IAAD,EAC7B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,eAKbY,EALa,yBAYZA,GAZY,4CAAH,sDCWLC,G,KATK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKP,IACpB,4BAAIA,SCwBDQ,EA1BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACf,GACpBa,EAAS,CACLf,KAAME,EACNW,SAAS,SAGlB,CAACpB,IAEGqB,EDV0BI,CAAazB,GAAjCY,EAFe,EAEpBL,KAAaa,EAFO,EAEPA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAE/CoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAGf,qBAAKA,UAAU,YAAf,SAEQJ,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEMtBgB,EAxBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,mBAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ0C,EAAWnB,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2223ccd2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(cat => [ inputValue, ...cat ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xHdDEM9buuFX5XnUTXpXA0wUWO05UDzk`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = await data.map(img=>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport 'animate.css';\n\n\nconst GifGridItem = ( {title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\nimport 'animate.css';\n\n\nconst GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {\n                loading && <p className=\"animate__animated animate__flash\">Loading... </p> \n            }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( (img) =>\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category).then((img) => {\n            setState({\n                data: img,\n                loading: false\n            }) \n        })\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Rick and Morty']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr />\n\n            <AddCategory setCategories={setCategories} />\n            <ol>\n                {\n                    categories.map((category) =>(\n                        <GifGrid \n                            key={category} \n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}